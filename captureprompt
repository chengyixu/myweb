<!-- 聊天界面 HTML 结构 -->
<div id="chatbox" style="border: 1px solid #ccc; height: 300px; overflow-y: scroll; padding: 10px;">
    <!-- 聊天记录将在这里显示 -->
</div>

<textarea id="userInput" style="width: 100%; height: 100px; margin-top: 10px;" placeholder="已经内置左边的提示词了，无需再次复制粘贴。"></textarea>

<button onclick="copyPromptToClipboard()">复制提示词到剪贴板</button>

<button onclick="pasteToTextarea()" style="margin-top: 10px;">粘贴</button>
<button onclick="sendMessage()" style="margin-top: 10px;">发送</button>

<!-- JavaScript 逻辑 -->
<script>
const chatbox = document.getElementById('chatbox');
const userInput = document.getElementById('userInput');
const OPENAI_API_URL = "https://api.openai.com/v1/chat/completions";
const OPENAI_API_KEY = "xxxxx"; // 请替换为你的API密钥
let messages = []; // 用于存储聊天记录
	

function copyPromptToClipboard() {
    const promptContentElement = document.querySelector('.theme-box.wp-posts-content');
    if (promptContentElement) {
        const promptContent = promptContentElement.innerText;

        const textArea = document.createElement('textarea');
        textArea.value = promptContent;
        document.body.appendChild(textArea);
        textArea.select();
        document.execCommand('copy');
        document.body.removeChild(textArea);

        alert('提示词已复制到剪贴板');
    } else {
        alert('未找到提示词内容');
    }
}


function appendMessage(role, content) {
    const messageDiv = document.createElement('div');
    messageDiv.className = role;
    messageDiv.textContent = role + ": " + content;
    chatbox.appendChild(messageDiv);
    chatbox.scrollTop = chatbox.scrollHeight; // 自动滚动到底部
}
	
	function getRandomName() {
    const names = ["幸运大王", "小幸运星", "普普通通", "倒霉蛋"];
    const randomIndex = Math.floor(Math.random() * names.length);
    return names[randomIndex];
}
	
	    const randomUserName = getRandomName();  // get a random name


// 新增的粘贴函数
function pasteToTextarea() {
    navigator.clipboard.readText()
        .then(clipText => userInput.value += clipText)
        .catch(err => alert('无法访问剪贴板'));
}

async function sendMessage() {
    const userMessage = userInput.value;
    userInput.value = '';

// Fetch the prompt content from the HTML based on the class
    const promptContentElement = document.querySelector('.theme-box.wp-posts-content');
    let promptContent = "";
    if (promptContentElement) {
        promptContent = promptContentElement.innerText;
    }
  
    const roleElement = document.querySelector('.article-title a');
    let role = "system";  // default role
    if (roleElement) {
        role = roleElement.innerText;
    }

    // Set the initial prompt message here
    messages.push({
        role: "system",
        content: promptContent // Change this prompt
    });

    messages.push({
        role: "user",
        content: userMessage
    });

    appendMessage(randomUserName, userMessage);

    // 使用 OpenAI API 获取 GPT 的回复
    fetch(OPENAI_API_URL, {
        method: 'POST',
        headers: {
            'Authorization': `Bearer ${OPENAI_API_KEY}`,
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            model: "gpt-3.5-turbo",
            messages: messages,
            temperature: 0.7
        })
    })
    .then(response => response.json())
    .then(data => {
        const gptResponse = data.choices[0].message.content.trim();
        messages.push({
            role: "system",
            content: gptResponse
        });
        appendMessage(role, gptResponse);
    })
    .catch(error => {
        console.error('Error:', error);
        appendMessage('系统', '抱歉，出现了错误。');
    });
}
</script>
